package source

import (
	"io"
	"sync"
)

type (
	// common holds the elements common between T and B and
	// captures common methods such as Errorf.
	testingCommon struct {
		mu          sync.RWMutex         // guards this group of fields
		output      []byte               // Output generated by test or benchmark.
		w           io.Writer            // For flushToParent.
		ran         bool                 // Test or benchmark (or one of its subtests) was executed.
		failed      bool                 // Test or benchmark has failed.
		skipped     bool                 // Test or benchmark has been skipped.
		done        bool                 // Test is finished and all subtests have completed.
		helperPCs   map[uintptr]struct{} // functions to be skipped when writing file/line info
		helperNames map[string]struct{}  // helperPCs converted to function names
		cleanups    []func()             // optional functions to be called at the end of the test
		cleanupName string               // Name of the cleanup function.
		cleanupPc   []uintptr            // The stack trace at the point where Cleanup was called.
		finished    bool                 // Test function has completed.

		// ...
	}
)
